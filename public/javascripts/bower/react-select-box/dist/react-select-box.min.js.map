{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-select-box.min.js","webpack:///webpack/bootstrap 73955e78211a62881fbb","webpack:///./lib/select-box.js","webpack:///external \"react\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","interceptEvent","event","preventDefault","stopPropagation","React","div","createElement","bind","button","a","select","option","label","idInc","keyHandlers",38,40,32,13,27,74,75,"createClass","displayName","getInitialState","open","focusedIndex","pendingValue","getDefaultProps","closeText","changeOnClose","isMultiple","String","props","updatePendingValue","value","cb","setState","componentWillMount","componentWillReceiveProps","next","clickingOption","blurTimeout","handleFocus","clearTimeout","handleBlur","setTimeout","handleClose","handleMouseDown","handleChange","val","selected","slice","index","indexOf","splice","push","onChange","refs","getDOMNode","focus","handleNativeChange","target","children","childNodes","reduce","memo","child","handleClear","state","toggleOpenClose","handleOpen","menu","moveFocus","move","len","Children","count","idx","handleKeyDown","which","handleUpKey","handleDownKey","handleSpaceKey","handleEnterKey","options","handleEscKey","filter","isSelected","map","length","join","multiple","forEach","Array","isArray","hasValue","render","className","onKeyDown","ref","onClick","onBlur","tabIndex","aria-hidden","renderOptionMenu","renderClearButton","renderNativeSelect","empty","key","concat","htmlFor","e","onFocus","renderOption","renderCloseButton","i","href","onMouseDown"],"mappings":"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","file":"react-select-box.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactSelectBox\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactSelectBox\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactSelectBox\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactSelectBox\"] = factory(root[\"react\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\"\n\t\n\tvar React = __webpack_require__(1)\n\t\n\tvar div = React.createElement.bind(null, 'div')\n\tvar button = React.createElement.bind(null, 'button')\n\tvar a = React.createElement.bind(null, 'a')\n\tvar select = React.createElement.bind(null, 'select')\n\tvar option = React.createElement.bind(null ,'option')\n\tvar label = React.createElement.bind(null, 'label')\n\t\n\tvar idInc = 0\n\t\n\tvar keyHandlers = {\n\t  38: 'handleUpKey',\n\t  40: 'handleDownKey',\n\t  32: 'handleSpaceKey',\n\t  13: 'handleEnterKey',\n\t  27: 'handleEscKey',\n\t  74: 'handleDownKey',\n\t  75: 'handleUpKey'\n\t}\n\t\n\tfunction interceptEvent(event) {\n\t  if (event) {\n\t    event.preventDefault()\n\t    event.stopPropagation()\n\t  }\n\t}\n\t\n\tmodule.exports = React.createClass({displayName: 'exports',\n\t  getInitialState: function () {\n\t    return {\n\t      id: 'react-select-box-' + (++idInc),\n\t      open: false,\n\t      focusedIndex: -1,\n\t      pendingValue: []\n\t    }\n\t  },\n\t\n\t  getDefaultProps: function () {\n\t    return {\n\t      closeText: 'Close'\n\t    }\n\t  },\n\t\n\t  changeOnClose: function () {\n\t    return this.isMultiple() && String(this.props.changeOnClose) === 'true'\n\t  },\n\t\n\t  updatePendingValue: function (value, cb) {\n\t    if (this.changeOnClose()) {\n\t      this.setState({pendingValue: value}, cb)\n\t      return true\n\t    }\n\t    return false\n\t  },\n\t\n\t  componentWillMount: function () {\n\t    this.updatePendingValue(this.props.value)\n\t  },\n\t\n\t  componentWillReceiveProps: function (next) {\n\t    this.updatePendingValue(next.value)\n\t  },\n\t\n\t  clickingOption: false,\n\t\n\t  blurTimeout: null,\n\t\n\t  handleFocus: function () {\n\t    clearTimeout(this.blurTimeout)\n\t  },\n\t\n\t  handleBlur: function () {\n\t    clearTimeout(this.blurTimeout)\n\t    this.blurTimeout = setTimeout(this.handleClose, 0)\n\t  },\n\t\n\t  handleMouseDown: function() {\n\t    this.clickingOption = true\n\t  },\n\t\n\t  handleChange: function (val, cb) {\n\t    return function (event) {\n\t      this.clickingOption = false\n\t      interceptEvent(event)\n\t      if (this.isMultiple()) {\n\t        var selected = []\n\t        if (val != null) {\n\t          selected = this.value().slice(0)\n\t          var index = selected.indexOf(val)\n\t          if (index !== -1) {\n\t            selected.splice(index, 1)\n\t          } else {\n\t            selected.push(val)\n\t          }\n\t        }\n\t        this.updatePendingValue(selected, cb) || this.props.onChange(selected)\n\t      } else {\n\t        this.updatePendingValue(val, cb) || this.props.onChange(val)\n\t        this.handleClose()\n\t        this.refs.button.getDOMNode().focus()\n\t      }\n\t    }.bind(this)\n\t  },\n\t\n\t  handleNativeChange: function (event) {\n\t    var val = event.target.value\n\t    if (this.isMultiple()) {\n\t      var children = [].slice.call(event.target.childNodes, 0)\n\t      val = children.reduce(function (memo, child) {\n\t        if (child.selected) {\n\t          memo.push(child.value)\n\t        }\n\t        return memo\n\t      }, [])\n\t    }\n\t    this.props.onChange(val)\n\t  },\n\t\n\t  handleClear: function (event) {\n\t    interceptEvent(event)\n\t    this.handleChange(null, function () {\n\t      // only called when change=\"true\"\n\t      this.props.onChange(this.state.pendingValue)\n\t    })(event)\n\t  },\n\t\n\t  toggleOpenClose: function (event) {\n\t    interceptEvent(event)\n\t    this.setState({open: !this.state.open});\n\t    if(this.state.open) {\n\t      return this.setState({open: false})\n\t    }\n\t\n\t    this.handleOpen()\n\t  },\n\t\n\t  handleOpen: function (event) {\n\t    interceptEvent(event)\n\t    this.setState({open: true}, function () {\n\t      this.refs.menu.getDOMNode().focus()\n\t    })\n\t  },\n\t\n\t  handleClose: function (event) {\n\t    interceptEvent(event)\n\t    if(!this.clickingOption) {\n\t      this.setState({open: false, focusedIndex: -1})\n\t    }\n\t    if (this.changeOnClose()) {\n\t      this.props.onChange(this.state.pendingValue)\n\t    }\n\t  },\n\t\n\t\n\t  moveFocus: function (move) {\n\t    var len = React.Children.count(this.props.children)\n\t    var idx = (this.state.focusedIndex + move + len) % len\n\t    this.setState({focusedIndex: idx})\n\t  },\n\t\n\t  handleKeyDown: function (event) {\n\t    if (keyHandlers[event.which]) {\n\t      this[keyHandlers[event.which]](event)\n\t    }\n\t  },\n\t\n\t  handleUpKey: function (event) {\n\t    interceptEvent(event)\n\t    this.moveFocus(-1)\n\t  },\n\t\n\t  handleDownKey: function (event) {\n\t    interceptEvent(event)\n\t    if (!this.state.open) {\n\t      this.handleOpen(event)\n\t    }\n\t    this.moveFocus(1)\n\t  },\n\t\n\t  handleSpaceKey: function (event) {\n\t    interceptEvent(event)\n\t    if (!this.state.open) {\n\t      this.handleOpen(event)\n\t    } else if (this.state.focusedIndex !== -1) {\n\t      this.handleEnterKey()\n\t    }\n\t  },\n\t\n\t  handleEnterKey: function (event) {\n\t    if (this.state.focusedIndex !== -1) {\n\t      this.handleChange(this.options()[this.state.focusedIndex].value)(event)\n\t    }\n\t  },\n\t\n\t  handleEscKey: function (event) {\n\t    if (this.state.open) {\n\t      this.handleClose(event)\n\t    } else {\n\t      this.handleClear(event)\n\t    }\n\t  },\n\t\n\t  label: function () {\n\t    var selected = this.options()\n\t      .filter(function (option) {\n\t        return this.isSelected(option.value)\n\t      }.bind(this))\n\t      .map(function (option) {\n\t        return option.label\n\t      })\n\t    return selected.length > 0 ? selected.join(', ') : this.props.label\n\t  },\n\t\n\t  isMultiple: function () {\n\t    return String(this.props.multiple) === 'true'\n\t  },\n\t\n\t  options: function () {\n\t    var options = []\n\t    React.Children.forEach(this.props.children, function (option) {\n\t      options.push({\n\t        value: option.props.value,\n\t        label: option.props.children\n\t      })\n\t    })\n\t    return options\n\t  },\n\t\n\t  value: function () {\n\t    var value = this.changeOnClose() ?\n\t      this.state.pendingValue :\n\t      this.props.value\n\t\n\t    if (!this.isMultiple() || Array.isArray(value)) {\n\t      return value\n\t    } if (value != null) {\n\t      return [value]\n\t    }\n\t    return []\n\t  },\n\t\n\t  hasValue: function () {\n\t    if (this.isMultiple()) {\n\t      return this.value().length > 0\n\t    }\n\t    return this.value() != null\n\t  },\n\t\n\t  isSelected: function (value) {\n\t    if (this.isMultiple()) {\n\t      return this.value().indexOf(value) !== -1\n\t    }\n\t    return this.value() === value\n\t  },\n\t\n\t  render: function () {\n\t    var className = 'react-select-box-container'\n\t    if (this.props.className) {\n\t      className += ' ' + this.props.className\n\t    }\n\t    if (this.isMultiple()) {\n\t      className += ' react-select-box-multi'\n\t    }\n\t    if (!this.hasValue()) {\n\t      className += ' react-select-box-empty'\n\t    }\n\t    return (\n\t      div(\n\t        {\n\t          onKeyDown: this.handleKeyDown,\n\t          className: className\n\t        },\n\t        button(\n\t          {\n\t            id: this.state.id,\n\t            ref: 'button',\n\t            className: 'react-select-box',\n\t            onClick: this.toggleOpenClose,\n\t            onBlur: this.handleBlur,\n\t            tabIndex: '0',\n\t            'aria-hidden': true\n\t          },\n\t          div({className: 'react-select-box-label'}, this.label())\n\t        ),\n\t        this.renderOptionMenu(),\n\t        this.renderClearButton(),\n\t        this.renderNativeSelect()\n\t      )\n\t    )\n\t  },\n\t\n\t  renderNativeSelect: function () {\n\t    var id = this.state.id + '-native-select'\n\t    var multiple = this.isMultiple()\n\t    var empty = multiple ? null : option({key: '', value: ''}, 'No Selection')\n\t    var options = [empty].concat(this.props.children)\n\t    return div(\n\t      {className: 'react-select-box-native'},\n\t      label({htmlFor: id}, this.props.label),\n\t      select({\n\t        id: id,\n\t        multiple: multiple,\n\t        onKeyDown: function (e) { e.stopPropagation() },\n\t        value: this.props.value || (multiple ? [] : ''),\n\t        onChange: this.handleNativeChange\n\t      }, options)\n\t    )\n\t\n\t  },\n\t\n\t  renderOptionMenu: function () {\n\t    var className = 'react-select-box-options'\n\t    if (!this.state.open) {\n\t      className += ' react-select-box-hidden'\n\t    }\n\t    /*\n\t    var active = null\n\t    if (this.state.focusedIndex !== -1) {\n\t      active = this.state.id + '-' + this.state.focusedIndex\n\t    }\n\t    */\n\t    return div(\n\t      {\n\t        className: className,\n\t        onBlur: this.handleBlur,\n\t        onFocus: this.handleFocus,\n\t        'aria-hidden': true,\n\t        ref: 'menu',\n\t        tabIndex: 0\n\t      },\n\t      div(\n\t        {\n\t          className: 'react-select-box-off-screen'\n\t        },\n\t        this.options().map(this.renderOption)\n\t      ),\n\t      this.renderCloseButton()\n\t    )\n\t  },\n\t\n\t  renderOption: function (option, i) {\n\t    var className = 'react-select-box-option'\n\t    if (i === this.state.focusedIndex) {\n\t      className += ' react-select-box-option-focused'\n\t    }\n\t    if (this.isSelected(option.value)) {\n\t      className += ' react-select-box-option-selected'\n\t    }\n\t    return a(\n\t      {\n\t        id: this.state.id + '-' + i,\n\t        href: '#',\n\t        onClick: this.handleChange(option.value),\n\t        onMouseDown: this.handleMouseDown,\n\t        className: className,\n\t        tabIndex: -1,\n\t        key: option.value,\n\t        onBlur: this.handleBlur,\n\t        onFocus: this.handleFocus\n\t      },\n\t      option.label\n\t    )\n\t  },\n\t\n\t  renderClearButton: function () {\n\t    if (this.hasValue()) {\n\t      return button({\n\t        className: 'react-select-box-clear',\n\t        'aria-hidden': true,\n\t        onClick: this.handleClear\n\t      })\n\t    }\n\t  },\n\t\n\t  renderCloseButton: function () {\n\t    if (this.isMultiple() && this.props.closeText) {\n\t      return button(\n\t        {\n\t          onClick: this.handleClose,\n\t          className: 'react-select-box-close',\n\t          onBlur: this.handleBlur,\n\t          onFocus: this.handleFocus\n\t        },\n\t        this.props.closeText\n\t      )\n\t    }\n\t  }\n\t})\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-select-box.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 73955e78211a62881fbb\n **/","\"use strict\"\n\nvar React = require('react/addons')\n\nvar div = React.createElement.bind(null, 'div')\nvar button = React.createElement.bind(null, 'button')\nvar a = React.createElement.bind(null, 'a')\nvar select = React.createElement.bind(null, 'select')\nvar option = React.createElement.bind(null ,'option')\nvar label = React.createElement.bind(null, 'label')\n\nvar idInc = 0\n\nvar keyHandlers = {\n  38: 'handleUpKey',\n  40: 'handleDownKey',\n  32: 'handleSpaceKey',\n  13: 'handleEnterKey',\n  27: 'handleEscKey',\n  74: 'handleDownKey',\n  75: 'handleUpKey'\n}\n\nfunction interceptEvent(event) {\n  if (event) {\n    event.preventDefault()\n    event.stopPropagation()\n  }\n}\n\nmodule.exports = React.createClass({displayName: 'exports',\n  getInitialState: function () {\n    return {\n      id: 'react-select-box-' + (++idInc),\n      open: false,\n      focusedIndex: -1,\n      pendingValue: []\n    }\n  },\n\n  getDefaultProps: function () {\n    return {\n      closeText: 'Close'\n    }\n  },\n\n  changeOnClose: function () {\n    return this.isMultiple() && String(this.props.changeOnClose) === 'true'\n  },\n\n  updatePendingValue: function (value, cb) {\n    if (this.changeOnClose()) {\n      this.setState({pendingValue: value}, cb)\n      return true\n    }\n    return false\n  },\n\n  componentWillMount: function () {\n    this.updatePendingValue(this.props.value)\n  },\n\n  componentWillReceiveProps: function (next) {\n    this.updatePendingValue(next.value)\n  },\n\n  clickingOption: false,\n\n  blurTimeout: null,\n\n  handleFocus: function () {\n    clearTimeout(this.blurTimeout)\n  },\n\n  handleBlur: function () {\n    clearTimeout(this.blurTimeout)\n    this.blurTimeout = setTimeout(this.handleClose, 0)\n  },\n\n  handleMouseDown: function() {\n    this.clickingOption = true\n  },\n\n  handleChange: function (val, cb) {\n    return function (event) {\n      this.clickingOption = false\n      interceptEvent(event)\n      if (this.isMultiple()) {\n        var selected = []\n        if (val != null) {\n          selected = this.value().slice(0)\n          var index = selected.indexOf(val)\n          if (index !== -1) {\n            selected.splice(index, 1)\n          } else {\n            selected.push(val)\n          }\n        }\n        this.updatePendingValue(selected, cb) || this.props.onChange(selected)\n      } else {\n        this.updatePendingValue(val, cb) || this.props.onChange(val)\n        this.handleClose()\n        this.refs.button.getDOMNode().focus()\n      }\n    }.bind(this)\n  },\n\n  handleNativeChange: function (event) {\n    var val = event.target.value\n    if (this.isMultiple()) {\n      var children = [].slice.call(event.target.childNodes, 0)\n      val = children.reduce(function (memo, child) {\n        if (child.selected) {\n          memo.push(child.value)\n        }\n        return memo\n      }, [])\n    }\n    this.props.onChange(val)\n  },\n\n  handleClear: function (event) {\n    interceptEvent(event)\n    this.handleChange(null, function () {\n      // only called when change=\"true\"\n      this.props.onChange(this.state.pendingValue)\n    })(event)\n  },\n\n  toggleOpenClose: function (event) {\n    interceptEvent(event)\n    this.setState({open: !this.state.open});\n    if(this.state.open) {\n      return this.setState({open: false})\n    }\n\n    this.handleOpen()\n  },\n\n  handleOpen: function (event) {\n    interceptEvent(event)\n    this.setState({open: true}, function () {\n      this.refs.menu.getDOMNode().focus()\n    })\n  },\n\n  handleClose: function (event) {\n    interceptEvent(event)\n    if(!this.clickingOption) {\n      this.setState({open: false, focusedIndex: -1})\n    }\n    if (this.changeOnClose()) {\n      this.props.onChange(this.state.pendingValue)\n    }\n  },\n\n\n  moveFocus: function (move) {\n    var len = React.Children.count(this.props.children)\n    var idx = (this.state.focusedIndex + move + len) % len\n    this.setState({focusedIndex: idx})\n  },\n\n  handleKeyDown: function (event) {\n    if (keyHandlers[event.which]) {\n      this[keyHandlers[event.which]](event)\n    }\n  },\n\n  handleUpKey: function (event) {\n    interceptEvent(event)\n    this.moveFocus(-1)\n  },\n\n  handleDownKey: function (event) {\n    interceptEvent(event)\n    if (!this.state.open) {\n      this.handleOpen(event)\n    }\n    this.moveFocus(1)\n  },\n\n  handleSpaceKey: function (event) {\n    interceptEvent(event)\n    if (!this.state.open) {\n      this.handleOpen(event)\n    } else if (this.state.focusedIndex !== -1) {\n      this.handleEnterKey()\n    }\n  },\n\n  handleEnterKey: function (event) {\n    if (this.state.focusedIndex !== -1) {\n      this.handleChange(this.options()[this.state.focusedIndex].value)(event)\n    }\n  },\n\n  handleEscKey: function (event) {\n    if (this.state.open) {\n      this.handleClose(event)\n    } else {\n      this.handleClear(event)\n    }\n  },\n\n  label: function () {\n    var selected = this.options()\n      .filter(function (option) {\n        return this.isSelected(option.value)\n      }.bind(this))\n      .map(function (option) {\n        return option.label\n      })\n    return selected.length > 0 ? selected.join(', ') : this.props.label\n  },\n\n  isMultiple: function () {\n    return String(this.props.multiple) === 'true'\n  },\n\n  options: function () {\n    var options = []\n    React.Children.forEach(this.props.children, function (option) {\n      options.push({\n        value: option.props.value,\n        label: option.props.children\n      })\n    })\n    return options\n  },\n\n  value: function () {\n    var value = this.changeOnClose() ?\n      this.state.pendingValue :\n      this.props.value\n\n    if (!this.isMultiple() || Array.isArray(value)) {\n      return value\n    } if (value != null) {\n      return [value]\n    }\n    return []\n  },\n\n  hasValue: function () {\n    if (this.isMultiple()) {\n      return this.value().length > 0\n    }\n    return this.value() != null\n  },\n\n  isSelected: function (value) {\n    if (this.isMultiple()) {\n      return this.value().indexOf(value) !== -1\n    }\n    return this.value() === value\n  },\n\n  render: function () {\n    var className = 'react-select-box-container'\n    if (this.props.className) {\n      className += ' ' + this.props.className\n    }\n    if (this.isMultiple()) {\n      className += ' react-select-box-multi'\n    }\n    if (!this.hasValue()) {\n      className += ' react-select-box-empty'\n    }\n    return (\n      div(\n        {\n          onKeyDown: this.handleKeyDown,\n          className: className\n        },\n        button(\n          {\n            id: this.state.id,\n            ref: 'button',\n            className: 'react-select-box',\n            onClick: this.toggleOpenClose,\n            onBlur: this.handleBlur,\n            tabIndex: '0',\n            'aria-hidden': true\n          },\n          div({className: 'react-select-box-label'}, this.label())\n        ),\n        this.renderOptionMenu(),\n        this.renderClearButton(),\n        this.renderNativeSelect()\n      )\n    )\n  },\n\n  renderNativeSelect: function () {\n    var id = this.state.id + '-native-select'\n    var multiple = this.isMultiple()\n    var empty = multiple ? null : option({key: '', value: ''}, 'No Selection')\n    var options = [empty].concat(this.props.children)\n    return div(\n      {className: 'react-select-box-native'},\n      label({htmlFor: id}, this.props.label),\n      select({\n        id: id,\n        multiple: multiple,\n        onKeyDown: function (e) { e.stopPropagation() },\n        value: this.props.value || (multiple ? [] : ''),\n        onChange: this.handleNativeChange\n      }, options)\n    )\n\n  },\n\n  renderOptionMenu: function () {\n    var className = 'react-select-box-options'\n    if (!this.state.open) {\n      className += ' react-select-box-hidden'\n    }\n    /*\n    var active = null\n    if (this.state.focusedIndex !== -1) {\n      active = this.state.id + '-' + this.state.focusedIndex\n    }\n    */\n    return div(\n      {\n        className: className,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        'aria-hidden': true,\n        ref: 'menu',\n        tabIndex: 0\n      },\n      div(\n        {\n          className: 'react-select-box-off-screen'\n        },\n        this.options().map(this.renderOption)\n      ),\n      this.renderCloseButton()\n    )\n  },\n\n  renderOption: function (option, i) {\n    var className = 'react-select-box-option'\n    if (i === this.state.focusedIndex) {\n      className += ' react-select-box-option-focused'\n    }\n    if (this.isSelected(option.value)) {\n      className += ' react-select-box-option-selected'\n    }\n    return a(\n      {\n        id: this.state.id + '-' + i,\n        href: '#',\n        onClick: this.handleChange(option.value),\n        onMouseDown: this.handleMouseDown,\n        className: className,\n        tabIndex: -1,\n        key: option.value,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus\n      },\n      option.label\n    )\n  },\n\n  renderClearButton: function () {\n    if (this.hasValue()) {\n      return button({\n        className: 'react-select-box-clear',\n        'aria-hidden': true,\n        onClick: this.handleClear\n      })\n    }\n  },\n\n  renderCloseButton: function () {\n    if (this.isMultiple() && this.props.closeText) {\n      return button(\n        {\n          onClick: this.handleClose,\n          className: 'react-select-box-close',\n          onBlur: this.handleBlur,\n          onFocus: this.handleFocus\n        },\n        this.props.closeText\n      )\n    }\n  }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/select-box.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"react\"\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}