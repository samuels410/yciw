<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="brand_configs"><RakeTask description="Remove all Brand Variable scss files" fullCmd="brand_configs:clean" taksId="clean" /><RakeTask description="generate all brands and upload everything to s3" fullCmd="brand_configs:generate_and_upload_all" taksId="generate_and_upload_all" /><RakeTask description="Write _brand_variable.scss to disk so canvas_css can render stylesheets for that branding" fullCmd="brand_configs:write" taksId="write" /></RakeGroup><RakeTask description="Builds mediaelementjs from it's git repo into a form canvas_lms can use with AMD and inject instructure-specific customizations" fullCmd="build_media_element_js" taksId="build_media_element_js" /><RakeGroup description="" fullCmd="" taksId="cache_digests"><RakeTask description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:dependencies" taksId="dependencies" /><RakeTask description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCmd="cache_digests:nested_dependencies" taksId="nested_dependencies" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="canvas"><RakeGroup description="" fullCmd="" taksId="cdn"><RakeTask description="Push static assets to s3" fullCmd="canvas:cdn:upload_to_s3" taksId="upload_to_s3" /></RakeGroup><RakeTask description="Compile javascript and css assets" fullCmd="canvas:compile_assets" taksId="compile_assets" /><RakeTask description="Just compile css and js for development" fullCmd="canvas:compile_assets_dev" taksId="compile_assets_dev" /><RakeTask description="Compresses static assets" fullCmd="canvas:compress_assets" taksId="compress_assets" /><RakeGroup description="" fullCmd="" taksId="quizzes"><RakeTask description="Create partition tables for the current and upcoming months" fullCmd="canvas:quizzes:create_event_partitions" taksId="create_event_partitions" /><RakeTask description="Generate a JSON dump of events in a single quiz submission" fullCmd="canvas:quizzes:dump_events[quiz_submission_id,out]" taksId="dump_events[quiz_submission_id,out]" /><RakeTask description="Generate events from snapshots for submissions to a quiz" fullCmd="canvas:quizzes:generate_events_from_snapshots[quiz_id]" taksId="generate_events_from_snapshots[quiz_id]" /><RakeTask description="" fullCmd="canvas:quizzes:dump_events" taksId="dump_events" /><RakeTask description="" fullCmd="canvas:quizzes:generate_events_from_snapshots" taksId="generate_events_from_snapshots" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="css"><RakeTask description="Generate styleguide" fullCmd="css:styleguide" taksId="styleguide" /><RakeTask description="" fullCmd="css:compile" taksId="compile" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Configure Default Account Name" fullCmd="db:configure_account_name" taksId="configure_account_name" /><RakeTask description="Create an administrator user" fullCmd="db:configure_admin" taksId="configure_admin" /><RakeTask description="Configure default settings" fullCmd="db:configure_default_settings" taksId="configure_default_settings" /><RakeTask description="Configure usage statistics collection" fullCmd="db:configure_statistics_collection" taksId="configure_statistics_collection" /><RakeTask description="Creates the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV it defaults to creating the development and test databases" fullCmd="db:create" taksId="create" /><RakeTask description="Create default accounts" fullCmd="db:create_default_accounts" taksId="create_default_accounts" /><RakeTask description="Create a new user" fullCmd="db:create_user" taksId="create_user" /><RakeTask description="Drops the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV it defaults to dropping the development and test databases" fullCmd="db:drop" taksId="drop" /><RakeTask description="Make sure all scribd mime types are set up correctly" fullCmd="db:ensure_scribd_mime_types" taksId="ensure_scribd_mime_types" /><RakeTask description="Make sure all message templates have notifications in the db" fullCmd="db:evaluate_notification_templates" taksId="evaluate_notification_templates" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="generate data" fullCmd="db:generate_data" taksId="generate_data" /><RakeTask description="Generate security.yml key" fullCmd="db:generate_security_key" taksId="generate_security_key" /><RakeTask description="Creates a database migration for any newly created/modified/deleted triggers in the models" fullCmd="db:generate_trigger_migration" taksId="generate_trigger_migration" /><RakeTask description="Useful initial setup task" fullCmd="db:initial_setup" taksId="initial_setup" /><RakeTask description="Load environment" fullCmd="db:load_environment" taksId="load_environment" /><RakeTask description="Create all the initial data, including notifications and admin account" fullCmd="db:load_initial_data" taksId="load_initial_data" /><RakeTask description="Find or create the notifications" fullCmd="db:load_notifications" taksId="load_notifications" /><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Run all pending predeploy migrations" fullCmd="db:migrate:predeploy" taksId="predeploy" /><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="migrate the page views in the database to cassandra" fullCmd="db:migrate_pageviews_to_cassandra[shard_id]" taksId="migrate_pageviews_to_cassandra[shard_id]" /><RakeTask description="Shows pending db migrations" fullCmd="db:pending_migrations" taksId="pending_migrations" /><RakeTask description="Resets the encryption_key hash in the database" fullCmd="db:reset_encryption_key_hash" taksId="reset_encryption_key_hash" /><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clear a db/schema_cache.dump file" fullCmd="db:schema:cache:clear" taksId="clear" /><RakeTask description="Create a db/schema_cache.dump file" fullCmd="db:schema:cache:dump" taksId="dump" /></RakeGroup><RakeTask description="Create a db/schema.rb file that is portable against any DB supported by AR / Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the database first)" fullCmd="db:setup" taksId="setup" /><RakeTask description="Shows skipped db migrations" fullCmd="db:skipped_migrations" taksId="skipped_migrations" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="Recreate the databases from the structure.sql file" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Drop and regenerate the test db by running migrations" fullCmd="db:test:reset" taksId="reset" /><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_schema" taksId="clone_schema" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:deprecated" taksId="deprecated" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:migrate_pageviews_to_cassandra" taksId="migrate_pageviews_to_cassandra" /><RakeTask description="" fullCmd="db:nuke" taksId="nuke" /><RakeTask description="" fullCmd="db:purge" taksId="purge" /><RakeGroup description="" fullCmd="" taksId="purge"><RakeTask description="" fullCmd="db:purge:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:reset" taksId="reset" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="delayed_engine"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from delayed_engine to application" fullCmd="delayed_engine:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate YARD Documentation" fullCmd="doc:api" taksId="api" /><RakeTask description="Generate docs for the app -- also available doc:rails, doc:guides (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="i18n"><RakeTask description="Imports new translations, ignores missing or unexpected keys" fullCmd="i18n:autoimport[translated_file,source_file]" taksId="autoimport[translated_file,source_file]" /><RakeTask description="Verifies all translation calls" fullCmd="i18n:check" taksId="check" /><RakeTask description="Exports new/changed English strings to be translated" fullCmd="i18n:export" taksId="export" /><RakeTask description="Generates a new en.yml file for all translations" fullCmd="i18n:generate" taksId="generate" /><RakeTask description="Generates JS bundle i18n files (non-en) and adds them to assets.yml" fullCmd="i18n:generate_js" taksId="generate_js" /><RakeTask description="Generate the pseudo-translation file lolz" fullCmd="i18n:generate_lolz" taksId="generate_lolz" /><RakeTask description="Validates and imports new translations" fullCmd="i18n:import[source_file,translated_file]" taksId="import[source_file,translated_file]" /><RakeTask description="Download language files from Transifex" fullCmd="i18n:transifex[user,password,languages]" taksId="transifex[user,password,languages]" /><RakeTask description="Download language files from Transifex and import them" fullCmd="i18n:transifeximport[user,password,languages,source_file]" taksId="transifeximport[user,password,languages,source_file]" /><RakeTask description="" fullCmd="i18n:autoimport" taksId="autoimport" /><RakeTask description="" fullCmd="i18n:i18n_environment" taksId="i18n_environment" /><RakeTask description="" fullCmd="i18n:import" taksId="import" /><RakeTask description="" fullCmd="i18n:transifex" taksId="transifex" /><RakeTask description="" fullCmd="i18n:transifeximport" taksId="transifeximport" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="i18nliner"><RakeTask description="Verifies all translation calls" fullCmd="i18nliner:check" taksId="check" /><RakeTask description="Generates a new [default_locale].yml file for all translations" fullCmd="i18nliner:dump" taksId="dump" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="js"><RakeTask description="Optimize and build js for production" fullCmd="js:build" taksId="build" /><RakeTask description="Build client_apps" fullCmd="js:build_client_apps" taksId="build_client_apps" /><RakeTask description="Creates ember app bundles" fullCmd="js:bundle_ember_apps" taksId="bundle_ember_apps" /><RakeTask description="Cleans build javascript files" fullCmd="js:clean" taksId="clean" /><RakeTask description="Compile Coffeescript to JS" fullCmd="js:coffee" taksId="coffee" /><RakeTask description="Compress js with uglify" fullCmd="js:compress" taksId="compress" /><RakeTask description="run Karma as you develop, can use `rake js:dev &lt;ember app name&gt; &lt;browser&gt;`" fullCmd="js:dev" taksId="dev" /><RakeTask description="Generates compiled coffeescript, handlebars templates and plugin extensions" fullCmd="js:generate" taksId="generate" /><RakeTask description="Generates plugin extension modules" fullCmd="js:generate_extensions" taksId="generate_extensions" /><RakeTask description="generate requirejs loader file @ spec/javascripts/load_tests.js" fullCmd="js:generate_runner" taksId="generate_runner" /><RakeTask description="Run Gulp Rev, for fingerprinting assets" fullCmd="js:gulp_rev" taksId="gulp_rev" /><RakeTask description="Compile React JSX to JS" fullCmd="js:jsx" taksId="jsx" /><RakeTask description="Ensure up-to-date node environment" fullCmd="js:npm_install" taksId="npm_install" /><RakeTask description="Concatenate js bundles with r.js" fullCmd="js:rjs_concat" taksId="rjs_concat" /><RakeTask description="Write config/build.js for r.js" fullCmd="js:rjs_config" taksId="rjs_config" /><RakeTask description="test javascript specs with Karma" fullCmd="js:test[reporter]" taksId="test[reporter]" /><RakeTask description="Build webpack js" fullCmd="js:webpack" taksId="webpack" /><RakeTask description="" fullCmd="js:test" taksId="test" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="jst"><RakeTask description="precompile handlebars templates from app/views/jst to public/javascripts/jst" fullCmd="jst:compile" taksId="compile" /><RakeTask description="precompile ember templates" fullCmd="jst:ember" taksId="ember" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="lint"><RakeTask description="lint controllers for bad render json calls" fullCmd="lint:render_json" taksId="render_json" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="rails:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:bin" taksId="bin" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /></RakeGroup></RakeGroup><RakeTask description="Removes the schema line in fixtures, models, and specs" fullCmd="remove_schema_signature" taksId="remove_schema_signature" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeTask description="Run the code examples in {gems,vendor}/plugins (except RSpec's own)" fullCmd="spec:coverage" taksId="coverage" /><RakeGroup description="" fullCmd="" taksId="db"><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures (from spec/fixtures) into the current environment's database" fullCmd="spec:db:fixtures:load" taksId="load" /></RakeGroup></RakeGroup><RakeTask description="Print Specdoc for all specs (excluding plugin specs)" fullCmd="spec:doc" taksId="doc" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Print Specdoc for all plugin examples" fullCmd="spec:plugin_doc" taksId="plugin_doc" /><RakeTask description="Run non-selenium files in a single thread" fullCmd="spec:plugin_non_parallel" taksId="plugin_non_parallel" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Runs the examples for rspec_on_rails" fullCmd="spec:plugins:rspec_on_rails" taksId="rspec_on_rails" /></RakeGroup><RakeTask description="Run the code examples in spec/selenium" fullCmd="spec:selenium" taksId="selenium" /><RakeTask description="Run RSpec code examples" fullCmd="spec:selenium_non_parallel[test_files]" taksId="selenium_non_parallel[test_files]" /><RakeGroup description="" fullCmd="" taksId="server"><RakeTask description="restart spec_server" fullCmd="spec:server:restart" taksId="restart" /><RakeTask description="start spec_server" fullCmd="spec:server:start" taksId="start" /><RakeTask description="check if spec server is running" fullCmd="spec:server:status" taksId="status" /><RakeTask description="stop spec_server" fullCmd="spec:server:stop" taksId="stop" /></RakeGroup><RakeTask description="Run the code examples in spec/services" fullCmd="spec:services" taksId="services" /><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="Run all specs in spec directory, wiping the database first" fullCmd="spec:wipedb" taksId="wipedb" /><RakeTask description="" fullCmd="spec:selenium_non_parallel" taksId="selenium_non_parallel" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application or engine" fullCmd="stats" taksId="stats" /><RakeGroup description="" fullCmd="" taksId="switchman"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="Copy migrations from switchman to application" fullCmd="switchman:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="Runs all tests in test folder" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests quickly by merging all types and not resetting db" fullCmd="test:all" taksId="all" /><RakeGroup description="" fullCmd="" taksId="all"><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:all:db" taksId="db" /></RakeGroup><RakeTask description="Run tests quickly, but also reset db" fullCmd="test:db" taksId="db" /><RakeTask description="" fullCmd="test:controllers" taksId="controllers" /><RakeTask description="" fullCmd="test:deprecate_all" taksId="deprecate_all" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:generators" taksId="generators" /><RakeTask description="" fullCmd="test:helpers" taksId="helpers" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:jobs" taksId="jobs" /><RakeTask description="" fullCmd="test:mailers" taksId="mailers" /><RakeTask description="" fullCmd="test:models" taksId="models" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:run" taksId="run" /><RakeTask description="" fullCmd="test:single" taksId="single" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/created.rid" taksId="doc/app/created.rid" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="html" taksId="html" /><RakeTask description="" fullCmd="html/created.rid" taksId="html/created.rid" /><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="remove_schema_sig" taksId="remove_schema_sig" /><RakeTask description="" fullCmd="tmp" taksId="tmp" /><RakeTask description="" fullCmd="tmp/cache" taksId="tmp/cache" /><RakeTask description="" fullCmd="tmp/cache/assets" taksId="tmp/cache/assets" /><RakeTask description="" fullCmd="tmp/cache/assets/development" taksId="tmp/cache/assets/development" /><RakeTask description="" fullCmd="tmp/cache/assets/production" taksId="tmp/cache/assets/production" /><RakeTask description="" fullCmd="tmp/cache/assets/test" taksId="tmp/cache/assets/test" /><RakeTask description="" fullCmd="tmp/pids" taksId="tmp/pids" /><RakeTask description="" fullCmd="tmp/sessions" taksId="tmp/sessions" /><RakeTask description="" fullCmd="tmp/sockets" taksId="tmp/sockets" /></RakeGroup></Settings>
