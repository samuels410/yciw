<%-
  @locale = raw I18n.locale.to_json
  @body_classes ||= []
  @body_classes << "context-#{@context.asset_string}" if @context
  yield :pre_html

-%><!DOCTYPE html>
<html class="scripts-not-loaded" lang=<%= @locale %>>
<head>
  <meta charset="utf-8">
  <title><%= (yield :page_title).presence || @page_title || t('default_page_title', "Canvas LMS") %></title>
  <!--[if lte IE 9]> <meta http-equiv=refresh content="0; URL=/ie-9-is-not-supported.html" /> <![endif]-->
  <%= favicon_link_tag(favicon) %>
  <%= favicon_link_tag(brand_variable('ic-brand-apple-touch-icon'), rel: 'apple-touch-icon', type: nil) %>
  <%= yield :auto_discovery %>
  <%= yield :head %>
  <%=
    # polyfill browsers that don't have a baseline of features we use like Promise or Object.assign
    polyfill_url = "vendor/ie11-polyfill.js"
    if request.user_agent.to_s =~ /Trident\/7.0.*rv:11/i
      # If it looks like IE11, assume they are going to need the polyfill
      # and serve it to them in the more performant way
      javascript_include_tag(polyfill_url)
    else
      # For other browsers, feature-detect for all the stuff we polyfill and
      # still provide a fallback if they don't have it.
      # The crazy string concatenation in the document.write is to trick Chrome
      # into not preemptively downloading it anyway.
      javascript_tag(%(
!function(){
  var o,s,v;
  if (!(window.Promise && Object.assign && [].find && [].includes && (o={},s=Symbol(),v={},o[s]=v,o[s]===v) && (function f(){}).bind().name==='bound f')) {
    document.write('<scr'+'ipt src="#{javascript_path(polyfill_url)}"></sc'+'ript>');
  }
}();
      ))
    end
  %>
  <%= yield :meta_tags %>
  <%= include_custom_meta_tags %>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta name="theme-color" content="<%= brand_variable('ic-brand-primary') %>">
  <%= include_css_bundles %>
  <%= yield :stylesheets %>
  <%= include_account_css %>
  <script>
    // listen for any clicks on links that have href="#" and queue them to be fired on dom ready.
      function _earlyClick(e){
        var cur = e.target || e.srcElement;
        while ( cur && cur.ownerDocument ) {
          if ( cur.getAttribute('href') == '#' ) {
            e.preventDefault();
            _earlyClick.clicks = _earlyClick.clicks || [];
            _earlyClick.clicks.push(cur);
            break;
          }
          cur = cur.parentNode;
        }
      }
      document.addEventListener('click', _earlyClick);
  </script>
</head>
