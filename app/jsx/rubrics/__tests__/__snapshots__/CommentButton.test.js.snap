// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The CommentButton component renders the root component as expected 1`] = `
<div>
  <Button
    as="button"
    buttonRef={[Function]}
    cursor="pointer"
    fluidWidth={false}
    icon={<IconFeedback />}
    margin="0 x-small 0 0"
    onClick={[Function]}
    size="medium"
    type="button"
    variant="icon"
  >
    <ScreenReaderContent
      as="span"
    >
      Additional Comments
    </ScreenReaderContent>
  </Button>
  <CommentDialog
    comments="some things"
    description="Criterion description"
    finalize={[Function]}
    open={false}
    setComments={[Function]}
  />
</div>
`;

exports[`The CommentButton component renders the root component as expected 2`] = `
<Modal
  constrain="window"
  contentRef={[Function]}
  defaultFocusElement={[Function]}
  insertAt="bottom"
  label="Additional Comments"
  liveRegion={null}
  mountNode={null}
  onClose={[Function]}
  onDismiss={[Function]}
  onEnter={[Function]}
  onEntered={[Function]}
  onEntering={[Function]}
  onExit={[Function]}
  onExited={[Function]}
  onExiting={[Function]}
  onOpen={[Function]}
  open={false}
  shouldCloseOnDocumentClick={true}
  shouldReturnFocus={true}
  size="medium"
  transition="fade"
>
  <ModalHeader>
    <CloseButton
      buttonRef={[Function]}
      margin="0"
      offset="medium"
      onClick={[Function]}
      placement="end"
      size="small"
      variant="icon"
    >
      Close
    </CloseButton>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h2"
    >
      Additional Comments
    </Heading>
    <Heading
      border="none"
      color="inherit"
      ellipsis={false}
      level="h3"
    >
      Criterion description
    </Heading>
  </ModalHeader>
  <ModalBody
    as="div"
    padding="medium"
  >
    <TextArea
      autoGrow={true}
      data-selenium="criterion_comments_text"
      disabled={false}
      inline={false}
      label="Comments"
      layout="stacked"
      maxHeight="50rem"
      messages={Array []}
      onChange={[Function]}
      readOnly={false}
      resize="none"
      size="medium"
      textareaRef={[Function]}
      value="some things"
    />
  </ModalBody>
  <ModalFooter>
    <Button
      as="button"
      buttonRef={[Function]}
      cursor="pointer"
      fluidWidth={false}
      margin="0 x-small 0 0"
      onClick={[Function]}
      size="medium"
      type="button"
      variant="light"
    >
      Cancel
    </Button>
    Â 
    <Button
      as="button"
      buttonRef={[Function]}
      cursor="pointer"
      fluidWidth={false}
      margin="0 x-small 0 0"
      onClick={[Function]}
      size="medium"
      type="button"
      variant="primary"
    >
      Update Comment
    </Button>
  </ModalFooter>
</Modal>
`;
